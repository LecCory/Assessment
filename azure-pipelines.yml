# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'e9df22f4-ef3b-492a-aabf-7d9afa1a3b76'

  # Function app name
  functionAppName: 'clapptest0001'

  # Environment name
  environmentName: 'dev'

  # Agent VM image name
 

stages:
- stage: IaC
  displayName: Create resources
  pool:
      name: SelfPool
  jobs:
    - job: CreateResources
      steps:    
      - task: AzureCLI@2
        inputs:
          azureSubscription: 'Azure subscription 1 (1ff6c602-69fe-454f-a795-de22a178a6c0)'
          scriptType: bash
          scriptLocation: 'inlineScript'
          inlineScript: 'az group create -n rgcoryleclair002 -l canadacentral'
      - task: AzureCLI@2
  
        inputs:
          azureSubscription: 'Azure subscription 1 (1ff6c602-69fe-454f-a795-de22a178a6c0)'
          scriptType: ps
          scriptLocation: 'inlineScript'
          inlineScript: 'az deployment group create -n myapp --resource-group rgcoryleclair002 -f "$(Build.SourcesDirectory)/bicep/main.bicep" -p "appName=clfapp001"'

- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: SelfPool

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'



    - script: |
        npm install typescript -g
        npm install @azure/functions -g
        npm install $(Build.SourcesDirectory)/api
        (cd $(Build.SourcesDirectory)/api && npm run build --if-present)    
        (cd $(Build.SourcesDirectory)/api && npm run test --if-present)  
      displayName: 'Prepare binaries'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/api'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      name: SelfPool
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure Functions App Deploy: '
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              deploymentMethod: zipDeploy
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'