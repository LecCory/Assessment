# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
resources:
  repositories:
    - repository: pulumi-testing
      type: github
      endpoint: LecCory
      name: LecCory/pulumi-testing
trigger: none
pool:
  name: SelfPool
stages:
- stage: Build_Site
  jobs:
    - job: APIBuild
      steps:
      - checkout: self
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            npm install
            npm run build
          workingDirectory: 'api'
        displayName: install API and build
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.SourcesDirectory)/api'
          ArtifactName: 'api'
          publishLocation: 'Container'
        displayName: publish API
    - job: UIBuild
      steps:
        - checkout: self
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              npm install
              npm run build
            workingDirectory: 'ui'
          displayName: install UI and build
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)/ui/dist'
            ArtifactName: 'UI'
            publishLocation: 'Container'
          displayName: publish UI

- stage: InfraSetup
  jobs:
  - job: infra
    steps:
      
      - checkout: pulumi-testing
      - checkout: self


      - task: Npm@1
        inputs:
          command: 'install'
          workingDir: pulumi-testing
      - task: Pulumi@1
        env:
          PULUMI_ACCESS_TOKEN: $(pulumi)
        inputs:
          azureSubscription: 'Azure subscription 1 (1ff6c602-69fe-454f-a795-de22a178a6c0)'
          cwd: pulumi-testing
          command: 'up'
          args: '--yes -f'
          stack: 'devPOC'
          createStack: true
          
        displayName: Standup Infrastructure
      - task: PowerShell@2
        inputs:
          workingDirectory: pulumi-testing
          targetType: 'inline'
          script: |
            $output=$(pulumi preview -s devPOC --show-sames -j) | ConvertFrom-Json
            $indexPos = $(foreach ($i in $output.steps) {if($i.urn -match 'clfa-'){$output.steps.indexOf($i)}})
            $faChange = $(if($output.steps[$indexPos].diffReasons.Length -gt 0){$true}else{$false})

            $faName=$(pulumi stack output -s corylec/newproj/devPOC faName)
            Write-Output ("##vso[task.setvariable variable=faChange;isOutput=true]$faChange")
            Write-Output ("##vso[task.setvariable variable=containerName;isOutput=true]$faName")
            write-host $env:containerName
        name: pulumi
        displayName: "Export Pulumi Vars"
      - script: |
          echo $(System.StageName)

- stage: Deploy
  
  dependsOn: InfraSetup

  variables:
    containerName: $[ stageDependencies.InfraSetup.infra.outputs['pulumi.containerName'] ] 
    faChange: $[ stageDependencies.InfraSetup.infra.outputs['pulumi.faChange'] ] 

  jobs:
  - job: Download_Artifacts

    steps:
    - checkout: self
  
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'api'
        downloadPath: '$(System.SourcesDirectory)/api'
      displayName: Download API Artifact
    
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'UI'
        downloadPath: '$(System.SourcesDirectory)/UI'
      displayName: Download UI Artifact

  - job: Deploy_FunctionApp
    condition: ne(variables.faChange, False)
    steps:
      
    - task: PowerShell@2
      inputs:
        workingDirectory: '$(System.SourcesDirectory)/api'
        targetType: 'inline'
        script: |
          
          func azure functionapp publish $(containerName) --force
        
        
        